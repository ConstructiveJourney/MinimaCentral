import React from "react";

import viewerIcon from "../assets/viewer_icon.png";
import creatorIcon from "../assets/creator_icon.png";
import splitterIcon from "../assets/splitter_icon.png";

const getLink = (site) => {
	switch (site) {
		case "minimacentral":
			if (window.navigator.userAgent.includes("Minima Browser")) {
				return (
					// eslint-disable-next-line
					// <a href = "#" onclick = {() => Android.openExternal("https://www.minimacentral.com/nftproject")} target = "_blank" rel="noopener noreferrer">MinimaCentral</a>
					"www.minimacentral.com"
				)
			} else {
				return (
					<a href = "https://www.minimacentral.com/nftproject" target = "_blank" rel="noopener noreferrer">MinimaCentral</a>
				)
			}
		case "minimacentral-learning":
			if (window.navigator.userAgent.includes("Minima Browser")) {
				return (
					"www.minimacentral.com/learning"
				)
			} else {
				return (
					<a href = "https://www.minimacentral.com/learning" target = "_blank" rel="noopener noreferrer">MinimaCentral - learning</a>
				)
			}
		case "minimaglobal":
			if (window.navigator.userAgent.includes("Minima Browser")) {
				return (
					"www.minima.global"
				)
			} else {
				return (
					<a href = "https://www.minima.global" target = "_blank" rel="noopener noreferrer">Minima Global</a>
				)
			}
		case "minimaglobal-docs":
			if (window.navigator.userAgent.includes("Minima Browser")) {
				return (
					"docs.minima.global"
				)
			} else {
				return (
					<a href = "https://docs.minima.global" target = "_blank" rel="noopener noreferrer">Minima Global - docs</a>
				)
			}
		case "minimaglobal-coloredcoins":
			if (window.navigator.userAgent.includes("Minima Browser")) {
				return (
					"docs.minima.global/docs/learn/minima/colouredcoins"
				)
			} else {
				return (
					<a href = "https://docs.minima.global/docs/learn/minima/colouredcoins" target = "_blank" rel="noopener noreferrer">Minima Global - colored coins</a>
				)
			}
		default:
			return "";
	}
}

function Info () {
	return (
		<>
			<section>
				<h2>Info</h2>
				<h3>MinimaCentral: a token display and creation app</h3>
			</section>

			<section>
				<h2>How to use this app</h2>
				<div className = "panel">
					<p>We may place updated information at {getLink("minimacentral")}.</p> 
					<ul>
						<li class = "li-dot">The app is in three parts: Viewer, Creator and Splitter.</li>
						<li class = "li-dot">Originally it was written to enable the creation of custom tokens with better image controls than available in Minima Global's app.  This is still its core functionality.</li>
						<li class = "li-dot">On top of that, we have now added functionality to Creator for experimental new technology, "Collections".  This enables creation of a token designed to be split into a numbered series, all sharing the same tokenid.  The Splitter page can then be used to split off coins one at a time, with different serial numbers and other attributes.  This is a proof of concept and, if adopted by the community, would benefit from improved automation.  At this point it is intended to demonstrate what is possible, illustrate the benefits and challenges, and enable further technological advances.</li>
					</ul>
					<h3>Viewer</h3>
					<img
						class = "info-img"
						src = {viewerIcon}
						alt = "Viewer"
						>
					</img>
					<ul>
						<li class = "li-dot">Viewer displays all the tokens in your node.</li>
						<li class = "li-dot">For any tokens without embedded images, the app will display a unique image generated by the app based on the tokenid.</li>
						<li class = "li-dot">Next is a larger view of whichever token you select, and you can click the "Show details" button to bring up more details.</li>
						<li class = "li-dot">"Show image code" will display the full text which is the encoding of the token image, if there is one.</li>
						<li class = "li-dot">Please note that certain characters, such as backslash, will be edited out.</li>
						<li class = "li-dot">Where the app finds a coin to be a collection coin, it will display it as a separate coin from any others in the same collection.  Nothing bad will happen from displaying these, but if you take actions based on what you see, please take care as this is a proof of concept system, the checking is not exhaustive, and it might be possible to fool the checking mechanism.</li>
						<li class = "li-dot">We have then added the possiblity to send collection coins to other addresses, for convenience.  As the transaction is not simple and not historically catered for by Minima Global's Wallet app, we included a mechanism here, although in general this app is intentionally designed not to be used for sending coins.</li>
					</ul>
					<h3>Creator</h3>
					<img
						class = "info-img"
						src = {creatorIcon}
						alt = "Creator"
						>
					</img>
					<ul>
						<li class = "li-dot">Creator enables you to create tokens.</li>
						<li class = "li-dot">It can make them with or without images.</li>
						<li class = "li-dot">If you include an image and want to spend time on it, the app offers controls to fine tune the size and quality of the image, within the space constraints imposed by the Minima blockchain.</li>
						<li class = "li-dot">More specifically, this app limits the image size to what would be created by using the project's Wallet app.  This avoids creating tokens which might otherwise become unusable, due to transaction size limits, and follows the project's lead, in accordance with our desire to be "good citizens".</li>
						<li class = "li-dot">Try the different levels of controls and select what suits you.  For most users, simple is good.</li>
						<li class = "li-dot">The only inputs which are actually required are marked as "required".</li>
						<li class = "li-dot">As with Viewer, please note that certain characters, such as backslash, will not be accepted.</li>
						<li class = "li-dot">At the time of writing, there is NO need whatsoever to include a burn.  This will come in due course if use of the blockchain grows.  You can therefore create tokens at a cost only of the fraction of a Minima, which will be "colored" with the token you create.</li>
					</ul>
					<h3>Splitter</h3>
					<img
						class = "info-img"
						src = {splitterIcon}
						alt = "Splitter"
						>
					</img>
					<ul>
						<li class = "li-dot">Splitter is for splitting a collection coin.</li>
						<li class = "li-dot">It will work <strong>only in a browser</strong> as otherwise a switch to the Pending dapp will abort the process.  If you are using your phone, please instead go to Settings and use Desktop Connect.</li>
					</ul>
				</div>
			</section>
			
			<section>
				<h2>Learning about Minima</h2>
				<div className = "panel">
					<p>You can read more about Minima at {getLink("minimaglobal")} and {getLink("minimaglobal-docs")}.</p>
					<p>There are also resources at {getLink("minimacentral-learning")}.</p>
				</div>
			</section>
			
			<section>
				<h2>Coloring coins and supply</h2>
				<div className = "panel">
					<p>See {getLink("minimaglobal-coloredcoins")}.</p>
					<p>Minima allows the creation of bespoke tokens by "coloring" Minimas, i.e. the creation uses up Minima tokens.  Each new token must be divisible down to the number of decimal places you specify.  Minimas have 44 decimal places, so if you create 1 token with zero decimal places, that will use 0.(43 zeros)1 Minima tokens, i.e. 1e-44.  If you create 1,000 tokens with three decimal places, that will use up 0.(37 zeros)1 Minima.  If you were to create the maximum number of tokens (1 trillion, or 1e12) with the maximum number of decimal places (1e16), that would use 1e(-44+12+16) = 1e-16 Minimas.  So there is no danger of even one Minima being used.</p>
				</div>
			</section>
			
			<section>
				<h2>Collections</h2>
				<div className = "panel">
					<p>This is a new technology by which a series of coins are created, each with a unique serial number, but with the same tokenid.</p>
					<ul>
						<li class = "li-dot">The methodology used in this app is to place relevant information, including the serial number of the coin, in the transaction state.  This information includes a state port called "isfixed", initially set to false.  Whilst it is false, any state can be changed in subsequent transactions, but once it has been set to true, the token script requires that all future transactions repeat designated state identically as before.  In this way, the state of individual coins can be manipulated freely up to a point, after which it is fixed.</li>
						<li class = "li-dot">The mechanism is clunky in that two transactions are required each time (1: split off a coin, and 2: fix it), and we invite suggestions for improvements or better alternative methods.</li>
					</ul>
				</div>
			</section>
			
			<section>
				<h2>Terms</h2>
				<div className = "panel">
					<p>THE SOFTWARE IS PROVIDED "AS IS", <strong>WITHOUT WARRANTY</strong> OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
					<p>Licence.  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so.</p>
					<p>Privacy.  This app does not send token details elsewhere.  It does not save information to disk, except through normal browser operations and node communication.  It does not send information anywhere else.  All it does is connect with your node, display that information to you, and enable you to interact with your node.</p>
				</div>
			</section>
			
			<section>
				<h2>Copyright and company</h2>
				<div className = "panel">
					<p>v2.1.0</p>{/* FINALISATION Update version number*/}
					<p>Copyright (c) 2023-25. Constructive Journey Limited. All rights reserved.</p>
					<p>Constructive Journey Limited is registered in England and Wales, company number 14759987. Registered office: Office One, 1 Coldbath Square, Farringdon, London, EC1R 5HL.</p>
				</div>
			</section>
		</>
	)
}

export default Info;